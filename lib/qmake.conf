# qmake configuration for building with emscripten
MAKEFILE_GENERATOR      = UNIX
QMAKE_PLATFORM          = html5 unix

include(../common/gcc-base.conf)
include(../common/clang.conf)

EMTERP_FLAGS = -s EMTERPRETIFY=1  -s EMTERPRETIFY_ASYNC=1 -s \"EMTERPRETIFY_FILE=\'data.binary\'\" -s ASSERTIONS=1 --profiling-funcs

EMCC_COMMON_LFLAGS      = --bind -s USE_ZLIB=1 -s USE_LIBPNG=1 -s USE_FREETYPE=1 -s ERROR_ON_UNDEFINED_SYMBOLS=1 -s ASSERTIONS=1 -s FETCH=1
EMCC_COMMON_LFLAGS      += -s FULL_ES2=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_WEBGL2=1
EMCC_COMMON_LFLAGS      += -s \"EXTRA_EXPORTED_RUNTIME_METHODS=[\'ccall\', \'cwrap\', \'intArrayFromString\', \'allocate\']\"

# EMCC_EXTRA_LFLAGS       = -s \"EXTRA_EXPORTED_RUNTIME_METHODS=[\'ccall\', \'cwrap\']\" -s EXPORTED_FUNCTIONS=\'[\"_getData\", \"_setData\"]\'
# EMCC_EXTRA_LFLAGS       += -s DEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\'[\"_getData\", \"_setData\"]\'

# -s DEMANGLE_SUPPORT=1
# -s USE_WEBGL2=1
# -s DISABLE_EXCEPTION_CATCHING=1
# -s TOTAL_STACK=15*1024*1024

EMCC_COMMON_LFLAGS_DEBUG = $$EMCC_COMMON_LFLAGS -s ASSERTIONS=2 -s DEMANGLE_SUPPORT=1 -s GL_DEBUG=1

# -s LIBRARY_DEBUG=1
# -s SYSCALL_DEBUG=1
# -s GL_DEBUG=1
# -s FS_LOG=1

QMAKE_COMPILER         += emscripten

QMAKE_CC                = emcc
QMAKE_CXX               = em++ -s USE_LIBPNG=1 -s USE_FREETYPE=1

# add --emrun to enable stdout stderr and exit
# QMAKE_CC                = emcc --emrun
# QMAKE_CXX               = em++ -s USE_LIBPNG=1 -s USE_FREETYPE=1 --emrun

# QMAKE_CFLAGS_THREAD     = -s USE_PTHREADS=1
# QMAKE_CXXFLAGS_THREAD   = $$QMAKE_CFLAGS_THREAD

QMAKE_CFLAGS           += $$EMCC_COMMON_LFLAGS
# QMAKE_CFLAGS           += $$EMCC_EXTRA_LFLAGS
QMAKE_CXXFLAGS         += $$EMCC_COMMON_LFLAGS
# QMAKE_CXXFLAGS         += $$EMCC_EXTRA_LFLAGS

# Practical debugging setup:
#    "-g4" preserves function names for stack traces
#    "-Os" produces reasonably sized binaries
QMAKE_CFLAGS_DEBUG     -= -g
QMAKE_CXXFLAGS_DEBUG   -= -g
QMAKE_CFLAGS_DEBUG     += -Os -g4
QMAKE_CXXFLAGS_DEBUG   += -Os -g4
QMAKE_LFLAGS_DEBUG += -Os -g4

QMAKE_CXXFLAGS_RELEASE -= -O2
QMAKE_CXXFLAGS_RELEASE += -O1
QMAKE_CFLAGS_RELEASE -= -O2
QMAKE_CFLAGS_RELEASE += -O1
QMAKE_LFLAGS_RELEASE += -O1
MAKE_CFLAGS_OPTIMIZE += -O1
MAKE_CFLAGS_OPTIMIZE_FULL += -Oz

QMAKE_LINK              = $$QMAKE_CXX
QMAKE_LINK_SHLIB        = $$QMAKE_CXX
QMAKE_LINK_C            = $$QMAKE_CC
QMAKE_LINK_C_SHLIB      = $$QMAKE_CC

QMAKE_LFLAGS_SHLIB     += --separate-asm
QMAKE_LIBS_THREAD       = $$QMAKE_CFLAGS_THREAD

QMAKE_LFLAGS            += $$EMCC_COMMON_LFLAGS
QMAKE_LFLAGS_DEBUG      += $$EMCC_COMMON_LFLAGS_DEBUG

QMAKE_PREFIX_SHLIB      = lib
QMAKE_EXTENSION_SHLIB   = so       # llvm bitcode, linked to js in post_link
QMAKE_PREFIX_STATICLIB  = lib
QMAKE_EXTENSION_STATICLIB = a      # llvm bitcode

QMAKE_AR                = emar cqs
QMAKE_CLEAN            += *.html *.js *.wasm

DEFINES += QT_NO_QFUTURE

QTPLUGIN.platforms = html5
load(qt_config)
